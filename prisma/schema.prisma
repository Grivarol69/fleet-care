generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Tenant {
  id         String          @id @default(uuid())
  name       String
  domain     String?         @unique
  photo      String?
  templateId String?
  rut_nit    String?
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt
  template   TenantTemplate? @relation(fields: [templateId], references: [id])

  @@index([templateId])
}

model User {
  id        String   @id @default(uuid())
  tenantId  String
  email     String
  firstName String?
  lastName  String?
  roleId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role      Role     @relation(fields: [roleId], references: [id])

  @@index([roleId])
}

model Role {
  id          String           @id @default(uuid())
  name        String
  tenantId    String
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  users       User[]
  permissions RolePermission[]

  @@index([name])
}

model Permission {
  id          String           @id @default(uuid())
  name        String
  description String?
  tenantId    String
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  roles       RolePermission[]

  @@index([name])
}

model RolePermission {
  roleId       String
  permissionId String
  createdAt    DateTime   @default(now())
  role         Role       @relation(fields: [roleId], references: [id])
  permission   Permission @relation(fields: [permissionId], references: [id])

  @@id([roleId, permissionId])
  @@index([roleId])
  @@index([permissionId])
}

model TenantTemplate {
  id                  String               @id @default(uuid())
  name                String               @unique
  description         String?
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
  roleTemplates       RoleTemplate[]
  permissionTemplates PermissionTemplate[]
  tenants             Tenant[]
}

model RoleTemplate {
  id                  String                   @id @default(uuid())
  name                String
  tenantTemplateId    String
  createdAt           DateTime                 @default(now())
  updatedAt           DateTime                 @updatedAt
  tenantTemplate      TenantTemplate           @relation(fields: [tenantTemplateId], references: [id])
  permissionTemplates RolePermissionTemplate[]

  @@unique([tenantTemplateId, name])
  @@index([tenantTemplateId])
}

model PermissionTemplate {
  id               String                   @id @default(uuid())
  name             String
  description      String?
  tenantTemplateId String
  createdAt        DateTime                 @default(now())
  updatedAt        DateTime                 @updatedAt
  tenantTemplate   TenantTemplate           @relation(fields: [tenantTemplateId], references: [id])
  roleTemplates    RolePermissionTemplate[]

  @@unique([tenantTemplateId, name])
  @@index([tenantTemplateId])
}

model RolePermissionTemplate {
  roleTemplateId       String
  permissionTemplateId String
  createdAt            DateTime           @default(now())
  roleTemplate         RoleTemplate       @relation(fields: [roleTemplateId], references: [id])
  permissionTemplate   PermissionTemplate @relation(fields: [permissionTemplateId], references: [id])

  @@id([roleTemplateId, permissionTemplateId])
  @@index([roleTemplateId])
  @@index([permissionTemplateId])
}

model Technician {
  id           Int         @id @default(autoincrement())
  tenantId     String
  name         String
  photo        String
  specialty    Specialty
  contact_info String
  status       Status      @default(ACTIVE)
  work_order   WorkOrder[]

  @@index([tenantId])
}

model Provider {
  id                  Int                   @id @default(autoincrement())
  userId              String
  tenantId            String
  name                String
  rut_nit             String
  specialty           Specialty
  contact_info        String
  status              Status                @default(ACTIVE)
  work_order          WorkOrder[]
  OTItem              WorkOrderItem[]
  mantItemsProvider   MantItemsProvider[]
  vehicleMantPlanItem VehicleMantPlanItem[]

  @@index([tenantId])
}

model Mant_Categories {
  id          Int          @id @default(autoincrement())
  userId      String
  description String
  status      Status       @default(ACTIVE)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  items_mants Mant_Items[]
}

model Mant_Items {
  id                  Int                   @id @default(autoincrement())
  userId              String
  tenantId            String
  description         String
  mant_type           Mant_Type
  estimated_time      Decimal               @db.Decimal(5, 2)
  idCategory          Int
  status              Status                @default(ACTIVE)
  plan_tasks          Plan_Tasks[]
  OTItem              WorkOrderItem[]
  mantItemsProvider   MantItemsProvider[]
  vehicleMantPlanItem VehicleMantPlanItem[]
  mant_categories     Mant_Categories       @relation(fields: [idCategory], references: [id], onDelete: Cascade)

  @@index([tenantId])
  @@index([idCategory])
}

model Mant_Plan {
  id              Int               @id @default(autoincrement())
  userId          String
  tenantId        String
  description     String
  vehicleBrandId  Int
  vehicleLineId   Int
  status          Status            @default(ACTIVE)
  plan_tasks      Plan_Tasks[]
  vehicleMantPlan VehicleMantPlan[]
  brand           Vehicle_Brand     @relation(fields: [vehicleBrandId], references: [id])
  line            Vehicle_Line      @relation(fields: [vehicleLineId], references: [id])

  @@index([tenantId])
  @@index([vehicleBrandId])
  @@index([vehicleLineId])
}

model Plan_Tasks {
  id         Int        @id @default(autoincrement())
  userId     String
  planId     Int
  mantItemId Int
  triggerKm  Int
  mant_plan  Mant_Plan  @relation(fields: [planId], references: [id])
  mant_items Mant_Items @relation(fields: [mantItemId], references: [id])

  @@index([planId])
  @@index([mantItemId])
  @@index([planId, triggerKm])
}

model VehicleMantPlan {
  id                  Int                   @id @default(autoincrement())
  userId              String
  tenantId            String
  vehiclePlate        String
  mantPlanId          Int
  assignedAt          DateTime              @default(now())
  completedKm         Int?
  status              Status
  state               OT_Status
  lastKmCheck         Int?
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  vehicleMantPlanItem VehicleMantPlanItem[]
  vehicle             Vehicle               @relation(fields: [vehiclePlate], references: [licensePlate])
  mantPlan            Mant_Plan             @relation(fields: [mantPlanId], references: [id])

  @@unique([vehiclePlate, mantPlanId])
  @@index([vehiclePlate])
  @@index([mantPlanId])
}

model VehicleMantPlanItem {
  id                Int             @id @default(autoincrement())
  vehicleMantPlanId Int
  mantItemId        Int
  providerId        Int?
  startDate         DateTime?
  endDate           DateTime?
  cost              Decimal?        @db.Decimal(10, 2)
  actualDuration    Int
  executionMileage  Int
  notes             String?
  state             OT_Status
  activatedAt       DateTime?
  completedAt       DateTime?
  vehicleMantPlan   VehicleMantPlan @relation(fields: [vehicleMantPlanId], references: [id])
  mantItem          Mant_Items      @relation(fields: [mantItemId], references: [id])
  provider          Provider?       @relation(fields: [providerId], references: [id])

  @@index([vehicleMantPlanId])
  @@index([mantItemId])
  @@index([providerId])
}

model MantItemsProvider {
  id         Int        @id @default(autoincrement())
  userId     String
  tenantId   String
  mantItemId Int
  providerId Int
  priority   Int
  status     Status
  mant_items Mant_Items @relation(fields: [mantItemId], references: [id])
  providers  Provider   @relation(fields: [providerId], references: [id])

  @@index([mantItemId])
  @@index([providerId])
}

model WorkOrder {
  id              Int             @id @default(autoincrement())
  userId          String
  tenantId        String
  vehiclePlate    String
  maintenanceType Mant_Type
  priority        OT_Priority
  creationDate    DateTime
  startDate       DateTime?
  endDate         DateTime?
  plannedAmount   Decimal?        @db.Decimal(10, 2)
  realAmount      Decimal?        @db.Decimal(10, 2)
  otstatus        OT_Status
  creationMileage Int
  technicianId    Int?
  providerId      Int?
  remarks         String?
  status          Status          @default(ACTIVE)
  workOrderItems  WorkOrderItem[]
  OTPart          WorkOrderPart[]
  vehicle         Vehicle         @relation(fields: [vehiclePlate], references: [licensePlate])
  technician      Technician?     @relation(fields: [technicianId], references: [id])
  provider        Provider?       @relation(fields: [providerId], references: [id])

  @@index([tenantId])
  @@index([technicianId])
  @@index([providerId])
  @@index([vehiclePlate])
}

model WorkOrderItem {
  id               Int        @id @default(autoincrement())
  userId           String
  woId             Int
  mantItemId       Int
  providerId       Int
  startDate        DateTime?
  endDate          DateTime?
  cost             Decimal?   @db.Decimal(10, 2)
  actualDuration   Int
  executionMileage Int
  notes            String?
  state            OT_Status
  workOrder        WorkOrder  @relation(fields: [woId], references: [id])
  mant_item        Mant_Items @relation(fields: [mantItemId], references: [id])
  provider         Provider   @relation(fields: [providerId], references: [id])

  @@index([woId])
  @@index([mantItemId])
  @@index([providerId])
}

model OdometerLog {
  id           Int      @id @default(autoincrement())
  vehiclePlate String
  kilometers   Int
  recordedAt   DateTime @default(now())
  vehicle      Vehicle  @relation(fields: [vehiclePlate], references: [licensePlate])

  @@index([vehiclePlate])
}

model MaintenanceAlerts {
  id                  Int          @id @default(autoincrement())
  vehiclePlate        String
  mantItemDescription String
  currentKm           Int
  executionKm         Int
  kmToMaintenance     Int
  status              Status
  state               Alerts_State
  vehicle             Vehicle      @relation(fields: [vehiclePlate], references: [licensePlate])

  @@index([vehiclePlate])
}

model AutoPart {
  id             Int             @id @default(autoincrement())
  userId         String
  tenantId       String
  name           String
  code           String
  cost           Float
  status         Status          @default(ACTIVE)
  workOrderParts WorkOrderPart[]

  @@index([tenantId])
}

model WorkOrderPart {
  id        Int       @id @default(autoincrement())
  userId    String
  tenantId  String
  woId      Int
  partId    Int
  quantity  Int
  cost      Float
  status    Status    @default(ACTIVE)
  workOrder WorkOrder @relation(fields: [woId], references: [id])
  autopart  AutoPart  @relation(fields: [partId], references: [id])

  @@index([tenantId])
  @@index([woId])
  @@index([partId])
}

model Vehicle_Brand {
  id           Int            @id @default(autoincrement())
  userId       String
  name         String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  Vehicle      Vehicle[]
  Vehicle_Line Vehicle_Line[]
  mant_plan    Mant_Plan[]
}

model Vehicle_Line {
  id        Int           @id @default(autoincrement())
  userId    String
  name      String
  brandId   Int
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  Vehicle   Vehicle[]
  mant_plan Mant_Plan[]
  brand     Vehicle_Brand @relation(fields: [brandId], references: [id])

  @@index([brandId])
}

model Vehicle_Type {
  id        Int       @id @default(autoincrement())
  userId    String
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  vehicle   Vehicle[]
}

model Model_Vehicle {
  id        Int      @id @default(autoincrement())
  userId    String
  brandId   Int
  lineId    Int
  typeId    Int
  year      Int
  engine    Engine
  wheels    Int
  status    Status   @default(ACTIVE)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([id])
  @@index([brandId])
  @@index([lineId])
  @@index([typeId])
}

model Document {
  id           String          @id @default(uuid())
  userId       String
  tenantId     String
  type         Document_Type
  fileName     String
  fileUrl      String
  uploadDate   DateTime        @default(now())
  expiryDate   DateTime?
  status       Document_Status @default(VIGENTE)
  insurance    String
  vehiclePlate String
  vehicle      Vehicle         @relation(fields: [vehiclePlate], references: [licensePlate])

  @@index([vehiclePlate, type])
  @@index([tenantId])
}

model Vehicle {
  id                Int                 @id @default(autoincrement())
  userId            String
  tenantId          String
  photo             String
  licensePlate      String              @unique
  typePlate         Type_Plate
  brandId           Int
  lineId            Int
  typeId            Int
  mileage           Int
  cylinder          Int
  bodyWork          String?
  engineNumber      String?
  chasisNumber      String?
  ownerCard         String?
  color             String
  owner             Type_Owner
  year              Int
  status            Status              @default(ACTIVE)
  situation         Type_Situation
  lastKilometers    Int?
  lastRecorder      DateTime?           @default(now())
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  documents         Document[]
  work_order        WorkOrder[]
  odometerLogs      OdometerLog[]
  vehicleMantPlan   VehicleMantPlan[]
  maintenanceAlerts MaintenanceAlerts[]
  brand             Vehicle_Brand       @relation(fields: [brandId], references: [id])
  line              Vehicle_Line        @relation(fields: [lineId], references: [id])
  type              Vehicle_Type        @relation(fields: [typeId], references: [id])

  @@index([brandId])
  @@index([lineId])
  @@index([typeId])
}

model Car {
  id           String   @id @default(uuid())
  userId       String
  name         String
  cv           String
  transmission String
  people       String
  photo        String
  priceDay     String
  engine       String
  type         String
  isPublish    Boolean?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  orders       Order[]
}

model Order {
  id           String   @id @default(uuid())
  carId        String
  carName      String
  userId       String
  orderDate    DateTime @default(now())
  orderEndDate DateTime @default(now())
  status       String
  totalAmount  String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  car          Car      @relation(fields: [carId], references: [id], onDelete: Cascade)

  @@index([carId])
  @@index([userId])
}

enum Mant_Type {
  PREVENTIVO
  PREDICTIVO
  CORRECTIVO
  ON_DEMAND
}

enum OT_Priority {
  BAJA
  MEDIA
  ALTA
  MUY_ALTA
}

enum OT_Status {
  PENDIENTE
  EN_PROCESO
  COMPLETADO
  ATRASADO
  CANCELADO
}

enum Document_Type {
  SOAT
  TECNOMECANICA
  POLIZA
  OTRO
}

enum Document_Status {
  VIGENTE
  VENCIDO
}

enum Status {
  ACTIVE
  INACTIVE
}

enum Type_Plate {
  PARTICULAR
  PUBLICO
}

enum Type_Situation {
  DISPONIBLE
  RENTADO
  MANTENIMIENTO
}

enum Type_Owner {
  PROPIO
  NO_PROPIO
  TERCERO
}

enum Engine {
  GASOLINA
  DIESEL
  ACPM
  GNV
  ELECTRICO
}

enum Specialty {
  MECANICA
  ELECTRICIDAD
  FRENOS
  NIVELES
}

enum Alerts_State {
  GREEN
  YELLOW
  RED
}
